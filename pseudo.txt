------Requirements------

A theme

A css styled page

Game starts on key-press

Each key press is shown to the user, if it is a correct letter it is shown
	in the word otherwise shown at the bottom as an incorrect word.

Can't guess same letter twice.

Only so many chances
	For the lives, could actually have a hangman being drawn.
		- Could figure out how to actually animate a line 
		being drawn from top to bottom.

Have background music (with a mute button) that changes depending on what
	word gets guessed.

keep track of wins


Need array of words

After user wins/loses the game should automatically choose another word
	and make the user play it.

The entire game should be an object.


------Ideas------

- Could do a general music theme, words guess are genres, music played
  is in that genre. 
	- The background, title, and all text could be displayed as if
	  it was on a music sheet.
		- This would be easy to design myself.

- Could actually add a button to switch to hard mode.
	- This would change the genres to very obscure ones.

- Name of game - Musical Hangman?

- displayed by Easy Mode - Game mode with your basic musical genres
- displayed by Hard Mode - Play this mode if you think you really know
			   your obscure genres!

- Should all the methods be updated to act on this.properties rather than passing
	those properties in as arguments?  Probably...

------To be displayed on page------

	- Press any key to get started!
	- Wins:
	- Number of guesses remaining:
	- Letters guessed: 


------Functions/ Methods------
	
	- getUserGuess: function(event) {
		let userGuess = event.key;
		return userGuess
	

	- getNewWord()
	
		- If hardModeBool === True
			- let index = Math.floor(Math.random() * possibleWordsHardMode.length);
			- return possibleWordsHardMode[index];
		
		- Else
			- let index = Math.floor(Math.random() * possibleWordsEasyMode.length);
			- return possibleWordsHardMode[index];

		- Picks random word from array and returns it


	- displayUnguessed(currentWordArr)

		- ForEach letter in currentWordArr, push an underscore to
		  a blank array
			- If the character is not a letter then just add
			  that character to the correctGuessArr

		- use displayArrayAsString(correctGuessArr, ' ')
			- space is passed in a separator so that there is
			  is a space between each underscore.


	- checkLetterGuess(letterGuessed)

		- if letterGuessed is in currentWordArr:

			- assign index of the corresponding letter to
			  correctLetterIndex

			- change the underscore at index correctLetterIndex
			  to letterGuessed

			- Update the page with 
			  displayArrayAsString(correctGuessArr, ' ')

		- If letterGuessed is not in currentWordArr:

			- livesLeft is decremented by 1

			- letterGuessed is pushed into wrongGuessArr
			
			- page is updated with 
			  displayArrayAsString(wrongGuessArr, ' ')


	- displayArrayAsString(array, separator)
		- *****DON'T NEED THIS JUST USE .JOIN(SEPARATOR)


	- checkGameOver(currentWordArr, correctGuessArr)
		- define empty array totalCorrectGuesses
		
		- ForEach in currentWordArr
			- if i is in correctGuessArr
				- push i to totalCorrectGuesses
			- else
				- continue

		- if totalCorrectGuesses.length === currentWordArr.length
			- return True
		- else
			- return False
	

	- endGameDisplays(result)

		- Shows word on page
		- Shows image for word
		- Plays song for image
		- If result === win
			- Show 'You Win!'
		- Else
			- Show 'You lose!'
	

	- resetGame
		- Resets livesLeft to 5
		- resets the hangman image
		- resets the word image to the default
		- resets currentWordArr to blank
		- resets the correctGuessArr to blank
		- resets letterGuessed to empty string
		- resets wrongGuessArr to blank


------Variables/ Properties-------

	- hardModeBool
		- set to True or False

	- possibleWordsEasyMode
		- list of words that can be used by program in easy mode
	
	- possbilewordsHardMode
		- list of words that can be used by program in hard mode

	- letterGuessed
		- Assigned by key-press
		- will be defined at the start of each game loop

	- currentWord
		- randomly picked from a word-array

	- currentWordArr
		- array of the letters in the currentWord

	- correctGuessArr
		- array of letters that have been guessed correctly
		- letters that haven't been guessed are shown
		  as underscores.

	- wrongGuessArr
		- array of letters that have been guessed and aren't
		  in the currentWord

	- livesLeft
		- number representing how many lives/ guesses are left

	- songsAndImages OBJ
		- an object with all possible words as keys and arrays
		  containing the image links and song links as items


------Pseudo Code------

- A user presses a key to start
- The game gets a word from an array
- The word is displayed as underscores

- Loop
	- The user presses a key for a letter 
		- This is assigned to userGuess variable
	- The game checks if the userGuess is in the lettersGuessed array
		- If it is then continue
		- if it is not then it gets pushed into the array
	- The game checks if userGuess in the secretWord
	- If it is in the word 
		-an underscore in the same position is changed to
		 that letter.

	- If it is not in the word
		- Guesses/ lives is decremented by 1
		- The letter is displayed under "Letters guessed"
	- Repeat the loop until either all the letters have been guessed
	  or guesses/ lives is reduced to 0.

- Loop ends then the current game ends

- The word is displayed at the top of the page

- A congradulations or You Lose is displayed depending on if the player won
  or lost.

- The image is displayed for the corresponding word (object?)

- A song is played corresponding to that image/word

- Game automatically restarts. (Whole game should be in a loop that begins 
  with the keypress.



------Genres------

---Easy---

- Classic Rock
- Blues
- Jazz
- Pop
- Classical
- Punk Rock
- Metal
- Country
- Bluegrass
- Funk
- Soul
- Electronic
- Hip-hop
- Reggae
- Indie
- Folk

---Hard---

- Barouqe
- Romatic
- Gregorian Chant
- Atonal
- Crust Punk
- Hardcore
- Math Rock
- Jazz-fusion
- synthwave
- vaporwave
- City-pop
- Afro-beat
- Italo Disco
- Soviet Disco
- Avant-Garde
- Krautrock
- Experimental
- Noise
- Drone
- Bossa Nova
- Samba
- House
- Dubstep
- Ambient
- Anatolian Rock
- Psychedelic
- Minimalist
- Surf Rock
- Jazz-funk
- Molam
- Spoken Word
- Latin-Funk
- Prog-Rock
- Cyber-Boogie


	